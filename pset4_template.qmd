---
title: "Problem-set-4"
format: 
  pdf:
    keep-tex: true
    include-in-header: 
       text: |
         \usepackage{fvextra}
         \DefineVerbatimEnvironment{Highlighting}{Verbatim}{breaklines,commandchars=\\\{\}}
include-before-body:
  text: |
    \RecustomVerbatimEnvironment{verbatim}{Verbatim}{
      showspaces = false,
      showtabs = false,
      breaksymbolleft={},
      breaklines
    }
---

**PS4:** Due Sat Nov 2 at 5:00PM Central. Worth 100 points. 
We use (`*`) to indicate a problem that we think might be time consuming. 
    
## Style Points (10 pts) 
Please refer to the minilesson on code style
**[here](https://uchicago.zoom.us/rec/share/pG_wQ-pHTQrJTmqNn4rcrw5V194M2H2s-2jdy8oVhWHkd_yZt9o162IWurpA-fxU.BIQlSgZLRYctvzp-)**.

## Submission Steps (10 pts)
1. This problem set is a paired problem set.
2. Play paper, scissors, rock to determine who goes first. Call that person *Partner 1*.
    - Partner 1 (name and cnet ID):
    - Partner 2 (name and cnet ID):
3. Partner 1 will accept the `ps4` and then share the link it creates with their partner. You can only share it with one partner so you will not be able to change it after your partner has accepted. 
4. "This submission is our work alone and complies with the 30538 integrity policy." Add your initials to indicate your agreement: \*\*\_\_\*\* \*\*\_\_\*\*
5. "I have uploaded the names of anyone else other than my partner and I worked with on the problem set **[here](https://docs.google.com/forms/d/185usrCREQaUbvAXpWhChkjghdGgmAZXA3lPWpXLLsts/edit)**"  (1 point)
6. Late coins used this pset: \*\*\_\_\*\* Late coins left after submission: \*\*\_\_\*\*
7. Knit your `ps4.qmd` to an PDF file to make `ps4.pdf`, 
    * The PDF should not be more than 25 pages. Use `head()` and re-size figures when appropriate. 
8. (Partner 1): push  `ps4.qmd` and `ps4.pdf` to your github repo.
9. (Partner 1): submit `ps4.pdf` via Gradescope. Add your partner on Gradescope.
10. (Partner 1): tag your submission in Gradescope

**Important:** Repositories are for tracking code. **Do not commit the data or shapefiles to your repo.** The best way to do this is with `.gitignore`, which we have covered in class. If you do accidentally commit the data, Github has a [guide](https://docs.github.com/en/repositories/working-with-files/managing-large-files/about-large-files-on-github#removing-files-from-a-repositorys-history). The best course of action depends on whether you have pushed yet. This also means that both partners will have to download the initial raw data and any data cleaning code will need to be re-run on both partners' computers. 

## Download and explore the Provider of Services (POS) file (10 pts)

1. 
PRVDR_CTGRY_SBTYP_CD (Provider Category Subtype Code)
PRVDR_CTGRY_CD (Provider Category Code)
PRVDR_NUM (CMS Certification Number)
FAC_NAME (Facility Name)
ZIP_CD (Address: Zip Code)
PGM_TRMNTN_CD (Terpmination Code)
TRMNTN_EXPRTN_DT (Termination Expiration Date)
STATE_CD (State Code)

2. 
    a.
    ```{python}
    
    import pandas as pd

    file_path_2016 = '~/Desktop/problem-set-4-xy-wz/pos2016.csv'
    pos2016 = pd.read_csv(file_path_2016)
    
    short_term_hospitals_2016 = pos2016[(pos2016['PRVDR_CTGRY_CD'] == 1) & (pos2016['PRVDR_CTGRY_SBTYP_CD'] == 1)]

    num_hospitals_2016 = short_term_hospitals_2016.shape[0]
    print(f"Number of short-term hospitals in 2016: {num_hospitals_2016}")

    ```

    This number appears reasonable given that the CMS dataset is known to include all hospitals eligible to bill Medicare.

    b.The number of short-term hospitals reported in the CMS POS dataset for 2016 is 7,245.  However, the Agency for Healthcare Research and Quality (AHRQ) reported 4,661 short-term acute care hospitals for the same year.  This difference might be because the CMS dataset includes all hospitals eligible to bill Medicare, while the AHRQ data only includes hospitals that meet specific criteria, like operating for at least 180 days.


3. 

```{python}
import matplotlib.pyplot as plt
import altair as alt

pos2017 = pd.read_csv(
    '~/Desktop/problem-set-4-xy-wz/pos2017.csv', encoding='latin1')
pos2018 = pd.read_csv(
    '~/Desktop/problem-set-4-xy-wz/pos2018.csv', encoding='latin1')
pos2019 = pd.read_csv(
    '~/Desktop/problem-set-4-xy-wz/pos2019.csv', encoding='latin1')

short_term_hospitals_2017 = pos2017[(pos2017['PRVDR_CTGRY_CD'] == 1) & (
    pos2017['PRVDR_CTGRY_SBTYP_CD'] == 1)]
short_term_hospitals_2018 = pos2018[(pos2018['PRVDR_CTGRY_CD'] == 1) & (
    pos2018['PRVDR_CTGRY_SBTYP_CD'] == 1)]
short_term_hospitals_2019 = pos2019[(pos2019['PRVDR_CTGRY_CD'] == 1) & (
    pos2019['PRVDR_CTGRY_SBTYP_CD'] == 1)]

all_years = pd.concat([short_term_hospitals_2016, short_term_hospitals_2017, short_term_hospitals_2018, short_term_hospitals_2019], keys=[
                      '2016', '2017', '2018', '2019']).reset_index(level=0).rename(columns={'level_0': 'Year'})

observations_per_year = all_years.groupby(
    'Year').size().reset_index(name='Number_of_Hospitals')

chart_observations = alt.Chart(observations_per_year).mark_bar().encode(
    x=alt.X('Year:O', title='Year'),
    y=alt.Y('Number_of_Hospitals:Q', title='Number of Hospitals'),
    tooltip=['Year', 'Number_of_Hospitals']
).properties(
    title='Number of Short-Term Hospitals by Year (2016-2019)',
    width=400,
    height=250
)

chart_observations.display()

num_hospitals_2017 = short_term_hospitals_2017.shape[0]
num_hospitals_2018 = short_term_hospitals_2018.shape[0]
num_hospitals_2019 = short_term_hospitals_2019.shape[0]

print(f"Number of short-term hospitals in 2017: {num_hospitals_2017}")
print(f"Number of short-term hospitals in 2018: {num_hospitals_2018}")
print(f"Number of short-term hospitals in 2019: {num_hospitals_2019}")


```


4. 
    a.
```{python}

unique_hospitals_per_year = all_years.groupby('Year')['PRVDR_NUM'].nunique().reset_index()
unique_hospitals_per_year.columns = ['Year', 'Unique_Hospitals']

chart_unique_per_year = alt.Chart(unique_hospitals_per_year).mark_bar().encode(
    x=alt.X('Year:O', title='Year'),
    y=alt.Y('Unique_Hospitals:Q', title='Number of Unique Hospitals'),
    tooltip=['Year', 'Unique_Hospitals']
).properties(
    title='Number of Unique Short-Term Hospitals by Year (2016-2019)',
    width=400,
    height=250
)

chart_unique_per_year.display()

```

    b.The comparison between the total number of hospitals and the number of unique hospitals reveals that the data is highly consistent across the years. In both plots, the number of hospitals remains almost unchanged from 2016 to 2019, with the total number of hospitals and unique hospitals being very close to each other. This suggests that most hospitals were consistently present throughout the time period, indicating minimal new entries or exits from the dataset. The stability in both total and unique counts highlights that the healthcare system had little fluctuation in terms of hospital availability, pointing to a continuous and stable system over these years.



## Identify hospital closures in POS file (15 pts) (*)

1. 
2. 
3. 
    a.
    b.
    c.

## Download Census zip code shapefile (10 pt) 

1. 
    a.
    b. 
2. 

## Calculate zip codeâ€™s distance to the nearest hospital (20 pts) (*)

1. 
2. 
3. 
4. 
    a.
    b.
5. 
    a.
    b.
    c.
    
## Effects of closures on access in Texas (15 pts)

1. 
2. 
3. 
4. 

## Reflecting on the exercise (10 pts) 
